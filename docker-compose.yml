services:
  backend:
    image: medical-chatbot-backend:latest
    container_name: medical_chatbot_backend
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    environment:
      - DOMAIN=${DOMAIN}
      - ENVIRONMENT=${ENVIRONMENT}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - SECRET_KEY=${SECRET_KEY}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD}
      - FIRST_SUPERUSER_FIRST_NAME=${FIRST_SUPERUSER_FIRST_NAME}
      - FIRST_SUPERUSER_LAST_NAME=${FIRST_SUPERUSER_LAST_NAME}
      - JWT_USER_FIRST_NAME=${JWT_USER_FIRST_NAME}
      - JWT_USER_LAST_NAME=${JWT_USER_LAST_NAME}
      - JWT_USER=${JWT_USER}
      - JWT_USER_PASSWORD=${JWT_USER_PASSWORD}
      - SQLALCHEMY_DATABASE_URI=${SQLALCHEMY_DATABASE_URI}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL_NAME=${OPENAI_MODEL_NAME}
      - OPENAI_EMBEDDINGS_NAME=${OPENAI_EMBEDDINGS_NAME}
      - QDRANT_COLLECTION_NAME=${QDRANT_COLLECTION_NAME}
      - QDRANT_API_KEY=${QDRANT_API_KEY}
      - QDRANT_URL=${QDRANT_URL}
      - TIME_ZONE=${TIME_ZONE}
    depends_on:
      - qdrant
    networks:
      - app_network

  # Qdrant vector database (comment out if using Qdrant Cloud)
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_storage:/qdrant/storage
    networks:
      - app_network

volumes:
  qdrant_storage:
    driver: local

networks:
  app_network:
    name: app_network
    driver: bridge
